## Spring DATASOURCE
spring.datasource.url=jdbc:postgresql://35.234.100.197:5432/${POSTGRES_DB}
spring.datasource.username=${DATASOURCE_USER}
spring.datasource.password=${DATASOURCE_PASSWORD}

com.auth0.domain=${AUTH0_DOMAIN}
com.auth0.tokenUrl=${AUTH0_TOKEN_URL}
com.auth0.clientId=${AUTH0_CLIENT_ID}
com.auth0.clientSecret=${AUTH0_CLIENT_SECRET}
com.auth0.issuer=${AUTH0_ISSUER}
com.auth0.apiAudience=${AUTH0_AUDIENCE}

com.auth0.management.apiAudience=${AUTH0_MANAGEMENT_AUDIENCE}
com.auth0.management.clientId=${AUTH0_MANAGEMENT_CLIENT_ID}
com.auth0.management.clientSecret=${AUTH0_MANAGEMENT_CLIENT_SECRET}


# IP local (maria): 192.168.56.1
# IP cloud db: 35.198.166.34 (main-instance), 35.234.100.197 (hlf-dev)


# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

#spring.mvc.throw-exception-if-no-handler-found=true
#spring.resources.add-mappings=false

# Hibernate ddl auto (create, create-drop, validate, update) and show-sql
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql = false

# Disable feature detection by this undocumented parameter and setting show-sql to false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.show-sql = false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

logging.file=godlyd_logg.file

